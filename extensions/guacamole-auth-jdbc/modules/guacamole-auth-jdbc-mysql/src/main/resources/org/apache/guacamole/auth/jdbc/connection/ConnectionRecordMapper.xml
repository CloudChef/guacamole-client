<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->

<mapper namespace="org.apache.guacamole.auth.jdbc.connection.ConnectionRecordMapper" >
    <!-- Result mapper for system permissions -->
    <resultMap id="ConnectionRecordResultMap" type="org.apache.guacamole.auth.jdbc.connection.ConnectionRecordModel">
        <result column="history_id"           property="recordID"                 jdbcType="INTEGER"/>
        <result column="recording_path"       property="recordingPath"            jdbcType="VARCHAR"/>
        <result column="recording_name"       property="recordingName"            jdbcType="VARCHAR"/>
        <result column="typescript_path"      property="typescriptPath"           jdbcType="VARCHAR"/>
        <result column="typescript_name"      property="typescriptName"           jdbcType="VARCHAR"/>
        <result column="exts"                 property="exts"                     jdbcType="VARCHAR"/>
        <result column="cmp_user_id"          property="cmpUserId"                jdbcType="VARCHAR"/>
        <result column="tenant_id"            property="tenantId"                jdbcType="VARCHAR"/>
        <result column="guacad_cloud_entry_id" property="guacadCloudEntryId"            jdbcType="VARCHAR"/>
        <result column="ip_address"            property="ipAddress"               jdbcType="VARCHAR"/>
        <result column="vm_name"            property="vmName"                     jdbcType="VARCHAR"/>
        <result column="protocol_name"        property="protocolName"                 jdbcType="VARCHAR"/>
        <result column="connection_id"        property="connectionIdentifier"     jdbcType="INTEGER"/>
        <result column="connection_name"      property="connectionName"           jdbcType="VARCHAR"/>
        <result column="remote_host"          property="remoteHost"               jdbcType="VARCHAR"/>
        <result column="sharing_profile_id"   property="sharingProfileIdentifier" jdbcType="INTEGER"/>
        <result column="sharing_profile_name" property="sharingProfileName"       jdbcType="VARCHAR"/>
        <result column="user_id"              property="userID"                   jdbcType="INTEGER"/>
        <result column="username"             property="username"                 jdbcType="VARCHAR"/>
        <result column="start_date"           property="startDate"                jdbcType="TIMESTAMP"/>
        <result column="end_date"             property="endDate"                  jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- Select all connection records from a given connection -->
    <select id="select" resultMap="ConnectionRecordResultMap">

        SELECT
            guacamole_connection_history.history_id,
            guacamole_connection_history.recording_path,
            guacamole_connection_history.recording_name,
            guacamole_connection_history.typescript_path,
            guacamole_connection_history.typescript_name,
            guacamole_connection_history.exts,
            guacamole_connection_history.cmp_user_id,
            guacamole_connection_history.tenant_id,
            guacamole_connection_history.guacad_cloud_entry_id,
            guacamole_connection_history.ip_address,
            guacamole_connection_history.vm_name,
            guacamole_connection_history.protocol_name,
            guacamole_connection_history.connection_id,
            guacamole_connection_history.connection_name,
            guacamole_connection_history.remote_host,
            guacamole_connection_history.sharing_profile_id,
            guacamole_connection_history.sharing_profile_name,
            guacamole_connection_history.user_id,
            guacamole_connection_history.username,
            guacamole_connection_history.start_date,
            guacamole_connection_history.end_date
        FROM guacamole_connection_history
        WHERE
            guacamole_connection_history.connection_id = #{identifier,jdbcType=VARCHAR}
        ORDER BY
            guacamole_connection_history.start_date DESC,
            guacamole_connection_history.end_date DESC

    </select>

    <!-- Insert the given connection record -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="record.recordID" parameterType="org.apache.guacamole.auth.jdbc.connection.ConnectionRecordModel">

        INSERT INTO guacamole_connection_history (
            recording_path,
            recording_name,
            typescript_path,
            typescript_name,
            exts,
            cmp_user_id,
            tenant_id,
            guacad_cloud_entry_id,
            ip_address,
            vm_name,
            protocol_name,
            connection_id,
            connection_name,
            remote_host,
            sharing_profile_id,
            sharing_profile_name,
            user_id,
            username,
            start_date,
            end_date
        )
        VALUES (
            #{record.recordingPath,jdbcType=VARCHAR},
            #{record.recordingName,jdbcType=VARCHAR},
            #{record.typescriptPath,jdbcType=VARCHAR},
            #{record.typescriptName,jdbcType=VARCHAR},
            #{record.exts,jdbcType=VARCHAR},
            #{record.cmpUserId,jdbcType=VARCHAR},
            #{record.tenantId,jdbcType=VARCHAR},
            #{record.guacadCloudEntryId,jdbcType=VARCHAR},
            #{record.ipAddress,jdbcType=VARCHAR},
            #{record.vmName,jdbcType=VARCHAR},
            #{record.protocolName,jdbcType=VARCHAR},
            #{record.connectionIdentifier,jdbcType=VARCHAR},
            #{record.connectionName,jdbcType=VARCHAR},
            #{record.remoteHost,jdbcType=VARCHAR},
            #{record.sharingProfileIdentifier,jdbcType=VARCHAR},
            #{record.sharingProfileName,jdbcType=VARCHAR},
            (SELECT user_id FROM guacamole_user
             JOIN guacamole_entity ON guacamole_user.entity_id = guacamole_entity.entity_id
             WHERE
                   guacamole_entity.name = #{record.username,jdbcType=VARCHAR}
               AND guacamole_entity.type = 'USER'),
            #{record.username,jdbcType=VARCHAR},
            #{record.startDate,jdbcType=TIMESTAMP},
            #{record.endDate,jdbcType=TIMESTAMP}
        )

    </insert>

    <!-- Search for specific connection records -->
    <select id="search" resultMap="ConnectionRecordResultMap">

        SELECT
            guacamole_connection_history.history_id,
            guacamole_connection_history.recording_path,
            guacamole_connection_history.recording_name,
            guacamole_connection_history.typescript_path,
            guacamole_connection_history.typescript_name,
            guacamole_connection_history.exts,
            guacamole_connection_history.cmp_user_id,
            guacamole_connection_history.tenant_id,
            guacamole_connection_history.guacad_cloud_entry_id,
            guacamole_connection_history.ip_address,
            guacamole_connection_history.vm_name,
            guacamole_connection_history.protocol_name,
            guacamole_connection_history.connection_id,
            guacamole_connection_history.connection_name,
            guacamole_connection_history.remote_host,
            guacamole_connection_history.sharing_profile_id,
            guacamole_connection_history.sharing_profile_name,
            guacamole_connection_history.user_id,
            guacamole_connection_history.username,
            guacamole_connection_history.start_date,
            guacamole_connection_history.end_date
        FROM guacamole_connection_history
        LEFT JOIN guacamole_connection ON guacamole_connection_history.connection_id = guacamole_connection.connection_id
        LEFT JOIN guacamole_user       ON guacamole_connection_history.user_id       = guacamole_user.user_id
        where 1=1

        <if test="recordAndSearchTerm != null">
            <if test="recordAndSearchTerm.tenantId != null and recordAndSearchTerm.tenantId !=''">
                AND guacamole_connection_history.tenant_id = #{recordAndSearchTerm.tenantId,jdbcType=VARCHAR}
            </if>
            <if test="recordAndSearchTerm.startDate != null and recordAndSearchTerm.endDate != null">
                AND start_date BETWEEN #{recordAndSearchTerm.startDate,jdbcType=TIMESTAMP} AND #{recordAndSearchTerm.endDate,jdbcType=TIMESTAMP}
            </if>
            <if test="recordAndSearchTerm.protocolName != null and recordAndSearchTerm.protocolName !=''">
                AND guacamole_connection_history.protocol_name in
                <foreach item="item" index="index" collection="recordAndSearchTerm.protocolName.split(',')" open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </if>
            <if test="recordAndSearchTerm.guacadCloudEntryId != null and recordAndSearchTerm.guacadCloudEntryId !=''">
                AND guacamole_connection_history.guacad_cloud_entry_id in
                <foreach item="item" index="index" collection="recordAndSearchTerm.guacadCloudEntryId.split(',')" open="(" separator="," close=")">
                    '${item}'
                </foreach>
            </if>
        </if>


        <!-- Search terms -->
        <foreach collection="terms" item="term"
                 open=" AND " separator=" AND ">
            (
              guacamole_connection_history.ip_address like concat('%',#{term.term,jdbcType=VARCHAR},'%')
            OR
               guacamole_connection_history.vm_name like concat('%',#{term.term,jdbcType=VARCHAR},'%')
<!--                guacamole_connection_history.user_id IN (-->
<!--                    SELECT user_id-->
<!--                    FROM guacamole_user-->
<!--                    WHERE POSITION(#{term.term,jdbcType=VARCHAR} IN username) > 0-->
<!--                )-->

<!--                OR guacamole_connection_history.connection_id IN (-->
<!--                    SELECT connection_id-->
<!--                    FROM guacamole_connection-->
<!--                    WHERE POSITION(#{term.term,jdbcType=VARCHAR} IN connection_name) > 0-->
<!--                )-->

<!--                <if test="term.startDate != null and term.endDate != null">-->
<!--                    OR start_date BETWEEN #{term.startDate,jdbcType=TIMESTAMP} AND #{term.endDate,jdbcType=TIMESTAMP}-->
<!--                </if>-->

            )
        </foreach>

        <!-- Bind sort property enum values for sake of readability -->
        <bind name="START_DATE" value="@org.apache.guacamole.net.auth.ActivityRecordSet$SortableProperty@START_DATE"/>

        <!-- Sort predicates -->
        <foreach collection="sortPredicates" item="sortPredicate"
                 open="ORDER BY " separator=", ">
            <choose>
                <when test="sortPredicate.property == START_DATE">guacamole_connection_history.start_date</when>
                <otherwise>1</otherwise>
            </choose>
            <if test="sortPredicate.descending">DESC</if>
        </foreach>

        <if test="recordAndSearchTerm != null ">
            LIMIT #{recordAndSearchTerm.currIndex,jdbcType=INTEGER},#{recordAndSearchTerm.pageSize,jdbcType=INTEGER}
        </if>


    </select>

    <!-- Search for specific connection records -->
    <select id="searchReadable" resultMap="ConnectionRecordResultMap">

        SELECT
            guacamole_connection_history.history_id,
            guacamole_connection_history.recording_path,
            guacamole_connection_history.recording_name,
            guacamole_connection_history.typescript_path,
            guacamole_connection_history.typescript_name,
            guacamole_connection_history.exts,
            guacamole_connection_history.cmp_user_id,
            guacamole_connection_history.tenant_id,
            guacamole_connection_history.guacad_cloud_entry_id,
            guacamole_connection_history.ip_address,
            guacamole_connection_history.vm_name,
            guacamole_connection_history.protocol_name,
            guacamole_connection_history.connection_id,
            guacamole_connection_history.connection_name,
            guacamole_connection_history.remote_host,
            guacamole_connection_history.sharing_profile_id,
            guacamole_connection_history.sharing_profile_name,
            guacamole_connection_history.user_id,
            guacamole_connection_history.username,
            guacamole_connection_history.start_date,
            guacamole_connection_history.end_date
        FROM guacamole_connection_history
        LEFT JOIN guacamole_connection ON guacamole_connection_history.connection_id = guacamole_connection.connection_id
        LEFT JOIN guacamole_user       ON guacamole_connection_history.user_id       = guacamole_user.user_id

        <!-- Restrict to readable connections -->
        JOIN guacamole_connection_permission ON
                guacamole_connection_history.connection_id = guacamole_connection_permission.connection_id
            AND <include refid="org.apache.guacamole.auth.jdbc.base.EntityMapper.isRelatedEntity">
                <property name="column"   value="guacamole_connection_permission.entity_id"/>
                <property name="entityID" value="#{user.entityID,jdbcType=INTEGER}"/>
                <property name="groups"   value="effectiveGroups"/>
            </include>
            AND guacamole_connection_permission.permission = 'READ'

        <!-- Restrict to readable users -->
        JOIN guacamole_user_permission ON
                guacamole_connection_history.user_id = guacamole_user_permission.affected_user_id
            AND <include refid="org.apache.guacamole.auth.jdbc.base.EntityMapper.isRelatedEntity">
                <property name="column"   value="guacamole_user_permission.entity_id"/>
                <property name="entityID" value="#{user.entityID,jdbcType=INTEGER}"/>
                <property name="groups"   value="effectiveGroups"/>
            </include>
            AND guacamole_user_permission.permission = 'READ'

        <!-- Search terms -->
        <foreach collection="terms" item="term"
                 open="WHERE " separator=" AND ">
            (

                guacamole_connection_history.user_id IN (
                    SELECT user_id
                    FROM guacamole_user
                    JOIN guacamole_entity ON guacamole_user.entity_id = guacamole_entity.entity_id
                    WHERE
                            POSITION(#{term.term,jdbcType=VARCHAR} IN guacamole_entity.name) > 0
                        AND guacamole_entity.type = 'USER'
                )

                OR guacamole_connection_history.connection_id IN (
                    SELECT connection_id
                    FROM guacamole_connection
                    WHERE POSITION(#{term.term,jdbcType=VARCHAR} IN connection_name) > 0
                )

                <if test="term.startDate != null and term.endDate != null">
                    OR start_date BETWEEN #{term.startDate,jdbcType=TIMESTAMP} AND #{term.endDate,jdbcType=TIMESTAMP}
                </if>

            )
        </foreach>

        <!-- Bind sort property enum values for sake of readability -->
        <bind name="START_DATE" value="@org.apache.guacamole.net.auth.ActivityRecordSet$SortableProperty@START_DATE"/>

        <!-- Sort predicates -->
        <foreach collection="sortPredicates" item="sortPredicate"
                 open="ORDER BY " separator=", ">
            <choose>
                <when test="sortPredicate.property == START_DATE">guacamole_connection_history.start_date</when>
                <otherwise>1</otherwise>
            </choose>
            <if test="sortPredicate.descending">DESC</if>
        </foreach>

        LIMIT #{limit,jdbcType=INTEGER}

    </select>

</mapper>
